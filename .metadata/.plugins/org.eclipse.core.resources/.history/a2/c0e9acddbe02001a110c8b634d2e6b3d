package kakao;

import java.util.*;

public class Solution_2 {

	public static int[] solution(String s) {
        int[] answer = {};
        Map<Integer, Integer> map = new HashMap<>();
        StringBuilder sb = new StringBuilder();
        for (int i = 2; i < s.length()-1; ++i) {
        	if (s.charAt(i) != '{' && s.charAt(i) != '}' && s.charAt(i) != ',')
				sb.append(s.charAt(i));
        	else {
        		int num = Integer.parseInt(sb.toString());
        		if (map.containsKey(num))
        			map.put(num, map.get(num)+1);
        		else
        			map.put(num, 1);
        		sb = new StringBuilder();
        	}
		}
        
        List<Map.Entry<Integer, Integer>> list = new LinkedList<>(map.entrySet());
        
        Collections.sort(list, new Comparator<Map.Entry<Integer, Integer>>() {
            @Override
            public int compare(Map.Entry<String, Integer> o1, Map.Entry<String, Integer> o2) {
                int comparision = (o1.getValue() - o2.getValue()) * -1;
                return comparision == 0 ? o1.getKey().compareTo(o2.getKey()) : comparision;
            }
        });
        
        for (int i = 0; i < map.size(); ++i) {
			
		}
        return answer;
    }
	
	public static void main(String[] args) {
		System.out.println(Arrays.toString(solution("{{2},{2,1},{2,1,3},{2,1,3,4}}")));
	}

}
